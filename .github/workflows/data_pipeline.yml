name: Data Pipeline

on:
  schedule:
    - cron: "0 0 * * *" # ירוץ כל יום בחצות
  workflow_dispatch: # מאפשר הרצה ידנית

jobs:
  run-pipeline:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Create .env file
        run: |
          cd "data_software"
          cat << EOF > .env
          # Platform payout rates
          PLATFORM_PAYOUT_SPOTIFY=0.0024
          PLATFORM_PAYOUT_BEATPORT=1.25

          # Database settings
          DB_PATH=data/revenue.db
          DATABASE_URL=sqlite:///data/revenue.db

          # Prophet settings
          PROPHET_CHANGEPOINT_PRIOR_SCALE=0.05
          PROPHET_SEASONALITY_PRIOR_SCALE=10.0
          PROPHET_SEASONALITY_MODE=multiplicative
          PROPHET_HOLIDAYS_PRIOR_SCALE=10.0

          # XGBoost settings
          XGB_MAX_DEPTH=6
          XGB_LEARNING_RATE=0.1
          XGB_N_ESTIMATORS=100

          # LSTM settings
          LSTM_UNITS=50
          LSTM_DROPOUT=0.2
          LSTM_EPOCHS=100
          LSTM_BATCH_SIZE=32

          # Additional settings
          LOG_LEVEL=INFO
          LOG_FILE=app.log
          FORECAST_HORIZON=12
          TRAIN_TEST_SPLIT=0.8
          RANDOM_STATE=42
          EOF

      - name: Check required files
        run: |
          cd "data_software"
          if [ ! -f ".env" ]; then
            echo "Error: .env file is missing"
            exit 1
          fi
          if [ ! -f "etl.py" ]; then
            echo "Error: etl.py is missing"
            exit 1
          fi
          if [ ! -f "run_forecast 2.py" ]; then
            echo "Error: run_forecast 2.py is missing"
            exit 1
          fi

      - name: Create required directories
        run: |
          mkdir -p data input processed models

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r "data_software/requirements.txt"

      - name: Run ETL
        run: |
          python data_software/etl.py

      - name: Check DB exists
        run: |
          if [ ! -f data/revenue.db ]; then
            echo "DB file not found!"
            ls -l data
            exit 1
          fi

      - name: Run Forecast
        run: |
          python "data_software/run_forecast 2.py"

      - name: Commit and push if changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update data and forecasts [skip ci]" && git push)
